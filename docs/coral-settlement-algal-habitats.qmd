---
title: "Coral settlement in algal habitats"
author: "Martina Burgo"
date: today
date-format: "DD/MM/YYYY"
format: 
  html:
    ## Format
    theme: default
    ## Table of contents
    toc: true
    toc-float: true
    ## Numbering
    number-sections: true
    number-depth: 3
    ## Layout
    fig-caption-location: "bottom"
    fig-align: "center"
    fig-dpi: 72
    tbl-cap-location: top
    ## Code
    code-fold: false
    code-tools: true
    code-summary: "Show the code"
    code-line-numbers: true
    ## Execution
    execute:
      echo: true
      cache: true
    ## Rendering
    embed-resources: true
crossref:
  fig-title: '**Figure**'
  fig-labels: arabic
  tbl-title: '**Table**'
  tbl-labels: arabic
engine: knitr
bibliography: ../docs/resources/references.bib
output_dir: "docs"
documentclass: article
fontsize: 12pt
mainfont: Arial
mathfont: LiberationMono
classoption: a4paper
---

```{r}
#| label: setup
#| include: false

knitr::opts_chunk$set(cache.lazy = FALSE,
                      tidy = "styler")
options(tinytex.engine = "xelatex")
```

# Preparations

## Load the necessary libraries

```{r}
#| label: libraries
#| output: false
#| eval: true
#| warning: false
#| message: false
#| cache: false

library(tidyverse)   #for data wrangling
library(readxl)
library(vegan)
library(stringr)
library(car)
library(brms)
library(patchwork)
library(corrplot)
library(loo)
library(tidybayes)
library(DHARMa)     #for residual diagnostics
library(rstan)      #for interfacing with STAN
library(emmeans)

source('../R/functions.R')
```



## Load data
```{r}
#| label: loadData


benthic_broad <- read_xlsx(path = '../data/primary/CH3-Algal-community-time-0.xlsx', sheet = 1) |>
  select(!Date)
benthic_local <- read_xlsx(path = '../data/primary/CH3-Algal-community-time-0.xlsx', sheet = 2) |>
  select(!Date)
data <- read_xlsx(path = '../data/primary/CH3-recruits-count.xlsx', sheet = 1) |>
  full_join(read_xlsx(path = '../data/primary/CH3-metadata.xlsx', sheet = 2) |> #adding treatments
  select(Tile, Treatment)) 
class <- read_xlsx(path = '../data/primary/Benthic_categories.xlsx', sheet = 1)
str(data)
```
# Data wrangling

First, declare categorical variables and combine top and bottom recruits as almost no recruits were found on the top of the tiles.

```{r}
data <- data |>
  filter(!is.na(Unbleached)) |>
  mutate(Tile = factor(Tile),
         Treatment = factor(Treatment, levels = c("No algae", "Only mat", "Only canopy", 
                                              "All algae"),
                          ordered = TRUE),
         Grazing = factor(Grazing)) |>
  group_by(Tile) |>
  mutate(Total = sum(Unbleached)) |>
  distinct(Tile, .keep_all = TRUE) |>
  select(Tile, Total, Treatment, Grazing)
```



## Benthic composition


```{r}
#| label: benthicCalcs

benthic_broad <- benthic_broad |>
  mutate(Cover = ifelse(Cover == "+", '0.5', Cover)) |>
  mutate(Cover = as.numeric(Cover)) |> #adjust rare species
  group_by(Tile) |>
  mutate(Freq_broad = Cover / sum(Cover)*100)

benthic_local <- benthic_local |>
  mutate(Perimeter = ifelse(Perimeter == "+", '1', Perimeter)) |>
  mutate(Perimeter = as.numeric(Perimeter)) |> #adjust rare species
  group_by(Tile) |>
  mutate(Freq_local = Perimeter / sum(Perimeter)*100)

```



## Canopy
Calculate the mean and sd of canopy height at local (perimeter) and broad (quadrat) level.

**Broad**

```{r}
#| label: canopyCalcsBroad

canopy_broad <- benthic_broad |>
  filter(Taxa == "Sargassum") |>
  mutate(H_mean_broad = NA,
         H_sd_broad = NA) |>
  rename(Freq_Sarg_broad = Freq_broad)

for (i in 1:nrow(canopy_broad)) {
  canopy_broad[i, 'H_mean_broad'] <- canopy_broad[i, 'Height'] |>
    str_split(', ') |>
    unlist() |>
    as.numeric() |>
    mean()

  canopy_broad[i, 'H_sd_broad'] <- canopy_broad[i, 'Height'] |>
    str_split(', ') |>
    unlist() |>
    as.numeric() |>
    sd()
}
```


**Local**

```{r}
#| label: canopyCalcsLocal

canopy_local <- benthic_local |>
  filter(Taxa == "Sargassum") |>
  mutate(H_mean_local = NA,
         H_sd_local = NA,
         Freq_Sarg_local = Freq_local)

for (i in 1:nrow(canopy_local)) {
  canopy_local[i, 'H_mean_local'] <- canopy_local[i, 'Height'] |>
    str_split(', ') |>
    unlist() |>
    as.numeric() |>
    mean()

  canopy_local[i, 'H_sd_local'] <- canopy_local[i, 'Height'] |>
    str_split(', ') |>
    unlist() |>
    as.numeric() |>
    sd()
}
```



## Species Richness & Diversity
```{r}
#| label: speciesRichness

R_broad <- benthic_broad |>
  left_join(class) |>
  filter(Classification != 'Other') |>
  group_by(Tile, Classification) |>
  summarise(R_broad = n()) |>
  pivot_wider(names_from = Classification, values_from = R_broad, values_fill = 0) |>
  rename(R_broad_alg = Alga,
         R_broad_coral = Coral)

R_local <- benthic_local |>
  left_join(class) |>
  filter(Classification != 'Other') |>
  group_by(Tile, Classification) |>
  summarise(n = n()) |>
  pivot_wider(names_from = Classification, values_from = n, values_fill = 0) |>
  rename(R_local_alg = Alga,
         R_local_coral = Coral)
```


```{r}
#| label: AlgDiversityCalcs

Shannon_broad_alg <- benthic_broad |>
  left_join(class) |>
  filter(Classification == 'Alga') |>
  distinct(Tile) |>
  arrange(-Tile) |>
  add_column(benthic_broad |>
           left_join(class) |>
           filter(Classification == 'Alga') |>
           dplyr::select(-Time, -Height, -Density, -Cover, -Classification) |>
           pivot_wider(names_from = Taxa, values_from = Freq_broad, values_fill = 0) |>
           arrange(-Tile) |>
           diversity(index = 'shannon') |>
  as_tibble()) |>
  rename(Shannon_broad_alg = value)

Shannon_local_alg <- benthic_local |>
  left_join(class) |>
  filter(Classification == 'Alga') |>
  distinct(Tile) |>
  arrange(-Tile) |>
  add_column(benthic_local |>
           left_join(class) |>
           filter(Classification == 'Alga') |>
           dplyr::select(-Time, -Height, -Perimeter, -Classification) |>
           pivot_wider(names_from = Taxa, values_from = Freq_local, values_fill = 0) |>
           arrange(-Tile) |>
           diversity(index = 'shannon') |>
  as_tibble()) |>
  rename(Shannon_local_alg = value)

```

```{r}
#| label: CoralDiversityCalcs


Shannon_broad_cor <- benthic_broad |>
  left_join(class) |>
  filter(Classification == 'Coral') |>
  distinct(Tile) |>
  arrange(-Tile) |>
  add_column(benthic_broad |>
           left_join(class) |>
           filter(Classification == 'Coral') |>
           dplyr::select(-Time, -Height, -Density, -Cover, -Classification) |>
           pivot_wider(names_from = Taxa, values_from = Freq_broad, values_fill = 0) |>
           arrange(-Tile) |>
           diversity(index = 'shannon') |>
  as_tibble()) |>
  rename(Shannon_broad_cor = value)

Shannon_local_cor <- benthic_local |>
  left_join(class) |>
  filter(Classification == 'Coral') |>
  distinct(Tile) |>
  arrange(-Tile) |>
  add_column(benthic_local |>
           left_join(class) |>
           filter(Classification == 'Coral') |>
           dplyr::select(-Time, -Height, -Perimeter, -Classification) |>
           pivot_wider(names_from = Taxa, values_from = Freq_local, values_fill = 0) |>
           arrange(-Tile) |>
           diversity(index = 'shannon') |>
  as_tibble()) |>
  rename(Shannon_local_cor = value)
```
## Coral % cover

```{r}
Tot_broad <- benthic_broad |>
  left_join(class) |>
  filter(Classification != 'Other') |>
  group_by(Tile, Classification) |>
  summarise(n = sum(Freq_broad)) |>
  pivot_wider(names_from = Classification, values_from = n, values_fill = 0) |>
  rename(Tot_broad_alg = Alga,
         Tot_broad_coral = Coral)

Tot_local <- benthic_local |>
  left_join(class) |>
  filter(Classification != 'Other') |>
  group_by(Tile, Classification) |>
  summarise(n = sum(Freq_local)) |>
  pivot_wider(names_from = Classification, values_from = n, values_fill = 0) |>
  rename(Tot_local_alg = Alga,
         Tot_local_coral = Coral)
```


## Combine all datasets
```{r}
#| label: combineDatasets
  
recruit <- data |>
  left_join(canopy_broad |>
              mutate(Tile = factor(Tile)) |>
              select(Tile, H_mean_broad, H_sd_broad, Freq_Sarg_broad)) |>
  left_join(canopy_local |>
              mutate(Tile = factor(Tile)) |>
              select(Tile, H_mean_local, H_sd_local, Freq_Sarg_local)) |>
  mutate(Hadj_broad = H_sd_broad/H_mean_broad,
         Hadj_local = H_sd_local/H_mean_local) |>
  left_join(benthic_broad |>
              mutate(Tile = factor(Tile)) |>
              group_by(Tile) |>
              filter(!is.na(Density)) |>
              select(Tile, Density, Freq_broad)) |>
  mutate(D_broad = Density/Freq_broad) |>
  ungroup() |>
  select(-Freq_broad) |>
  left_join(R_broad |>
              mutate(Tile = factor(Tile))) |>
  left_join(R_local |>
              mutate(Tile = factor(Tile))) |>
  left_join(Shannon_broad_alg |>
              mutate(Tile = factor(Tile))) |>
  left_join(Shannon_broad_cor |>
              mutate(Tile = factor(Tile))) |>
  left_join(Shannon_local_alg |>
              mutate(Tile = factor(Tile))) |>
  left_join(Shannon_local_cor |>
              mutate(Tile = factor(Tile))) |>
  left_join(Tot_broad |>
              mutate(Tile = factor(Tile))) |>
  left_join(Tot_local |>
              mutate(Tile = factor(Tile))) |>
  mutate_all(~replace(., is.na(.), 0))
```

```{r}
#| label: saveCleanData

write.csv(recruit, file = '../data/processed/recruit.csv')
```



# Exploratory data analysis

```{r}
recruit |> 
  ggplot(aes(y = Total, x = Treatment)) +
  geom_boxplot() +
  geom_point(color = 'black')
```

```{r}
recruit |> ggplot(aes(y = Hadj_broad)) +
  geom_boxplot()

recruit |> ggplot(aes(y = Hadj_local)) +
  geom_boxplot()

recruit |> ggplot(aes(y = Hadj_broad, x = Hadj_local)) +
  geom_point() +
  geom_smooth(method = 'lm')
```


# Model 1 - Treatment

Model formula: 
$$
\begin{align}
y_i &\sim{} \mathcal{Pois}(\lambda_i)\\
ln(\mu_i) &= \boldsymbol{\beta} \bf{X_i}\\
\beta_0 &\sim{} \mathcal{N}(0.5, 1)\\
\beta_{1,2,3} &\sim{} \mathcal{N}(0,3)\\
\end{align}
$$

```{r}
#| label: priors

form <- bf(Total ~ Treatment, family = poisson(link = 'log')) 
form |> get_prior(data = recruit)

priors <- prior(normal(0.5, 1), class = 'Intercept') +
  prior(normal(0, 3), class = 'b')

recruit.brm <- brm(form, prior = priors, data = recruit, 
               sample_prior = 'only', 
               iter = 5000, 
               warmup = 1000, 
               chains = 3, cores = 3, 
               thin = 5, 
               refresh = 0, 
               backend = 'rstan') 
```

```{r}
recruit.brm |> conditional_effects() |> plot(points = TRUE)
```

```{r}
recruit.brm2 <- recruit.brm |>
  update(sample_prior = 'yes')
```

```{r}
recruit.brm2 |> SUYR_prior_and_posterior()
```

## MCMC sampling diagnostics

```{r}
(recruit.brm2$fit |> stan_trace()) + (recruit.brm2$fit |> stan_ac()) + (recruit.brm2$fit |> stan_rhat()) + (recruit.brm2$fit |> stan_ess())
#chains are well mixed and have converged on a stable posterior
```

## Model validation

Posterior probability check:

```{r}
recruit.brm2 |> pp_check(type = 'dens_overlay', ndraws = 100)
```

Checking the residuals

```{r}
recruit.resids <- make_brms_dharma_res(recruit.brm2, integerResponse = FALSE)
testUniformity(recruit.resids)
plotResiduals(recruit.resids, form = factor(rep(1, nrow(recruit))))
plotResiduals(recruit.resids, quantreg = TRUE) 
testDispersion(recruit.resids)
```

## Model investigation

### Partial effects plots

```{r}
recruit.brm2 |> conditional_effects() |> plot(points = TRUE)
```

### CIs

```{r}
recruit.brm2 |>
  as_draws_df() |>
  mutate(across(everything(), exp)) |>
  summarise_draws(median,
                  HDInterval::hdi,
                  rhat, length, ess_bulk, ess_tail,
                  Pl = ~mean(.x < 1),
                  Pg = ~mean(.x > 1)) |> #checks how confident we are that there's evidence of decline
  as_tibble()
```


## Save model
```{r}
#| label: saveModelBase

save(recruit.brm, recruit.brm2, file = '../data/modelled/BaseModel.RData')
```


# Model 2 - Sar. height at broad scale

## Check correlation

```{r}
recruit |> 
  dplyr::select(H_mean_broad, H_sd_broad, H_mean_local, H_sd_local, 
                Hadj_broad, Hadj_local, D_broad) |> 
  cor() |> 
  corrplot()
```


## Fit model

```{r}
#| label: priorsComplex

form <- bf(Total ~ H_mean_broad, family = poisson(link = 'log')) 
form |> get_prior(data = recruit)

recruit |>
  summarise(mean = mean(H_mean_broad),
            sd = sd(H_mean_broad))

priors <- prior(normal(0.5, 1), class = 'Intercept') +
  prior(normal(0, 10), class = 'b')

recruit.brm3 <- brm(form, prior = priors, data = recruit, 
               sample_prior = 'only', 
               iter = 5000, 
               warmup = 1000, 
               chains = 3, cores = 3, 
               thin = 5, 
               refresh = 0, 
               backend = 'rstan') 
```


```{r}
recruit.brm3 |> conditional_effects() |> plot(points = TRUE, ask = FALSE)
```

```{r}
recruit.brm4 <- recruit.brm3 |>
  update(sample_prior = 'yes')
```

```{r}
recruit.brm4 |> SUYR_prior_and_posterior()
```


## Diagnostics

MCMC

```{r}
recruit.brm4$fit |> stan_trace()
recruit.brm4$fit |> stan_ac() 
recruit.brm4$fit |> stan_rhat() 
recruit.brm4$fit |> stan_ess()
```

Density overlay
```{r}
recruit.brm4 |> pp_check(type = 'dens_overlay', ndraws = 100)
```

DHARMa
```{r}
recruit.resids <- make_brms_dharma_res(recruit.brm4, integerResponse = FALSE)
wrap_elements(~testUniformity(recruit.resids)) +
  wrap_elements(~plotResiduals(recruit.resids, form = factor(rep(1, nrow(recruit))))) + 
  wrap_elements(~plotResiduals(recruit.resids, quantreg = FALSE)) +
  wrap_elements(~testDispersion(recruit.resids)) 
```

## Model investigation

### Partial effects plots 
```{r}
recruit.brm4 |> conditional_effects() |>
  plot(points = TRUE, ask = FALSE)
```


## Model investigation
```{r}
recruit.brm4 |>
  as_draws_df() |>
  mutate(across(everything(), exp)) |>
  summarise_draws(median,
                  HDInterval::hdi,
                  rhat, length, ess_bulk, ess_tail,
                  Pl = ~mean(.x < 1),
                  Pg = ~mean(.x > 1)) |> #checks how confident we are that there's evidence of decline
  knitr::kable()
```


# Model 3 - Sar. height at local scale

## Fit model

```{r}
#| label: priorsComplex

form <- bf(Total ~ H_mean_local, family = poisson(link = 'log')) 
form |> get_prior(data = recruit)

recruit |>
  summarise(mean = mean(H_mean_local),
            sd = sd(H_mean_local))

priors <- prior(normal(0.5, 1), class = 'Intercept') +
  prior(normal(0, 10), class = 'b')

recruit.brm5 <- brm(form, prior = priors, data = recruit, 
               sample_prior = 'only', 
               iter = 5000, 
               warmup = 1000, 
               chains = 3, cores = 3, 
               thin = 5, 
               refresh = 0, 
               backend = 'rstan') 
```


```{r}
recruit.brm5 |> conditional_effects() |> plot(points = TRUE, ask = FALSE)
```

```{r}
recruit.brm6 <- recruit.brm5 |>
  update(sample_prior = 'yes')
```

```{r}
recruit.brm6 |> SUYR_prior_and_posterior()
```


## Diagnostics

MCMC

```{r}
recruit.brm6$fit |> stan_trace()
recruit.brm6$fit |> stan_ac() 
recruit.brm5$fit |> stan_rhat() 
recruit.brm6$fit |> stan_ess()
```

Density overlay
```{r}
recruit.brm6 |> pp_check(type = 'dens_overlay', ndraws = 100)
```

DHARMa
```{r}
recruit.resids <- make_brms_dharma_res(recruit.brm6, integerResponse = FALSE)
wrap_elements(~testUniformity(recruit.resids)) +
  wrap_elements(~plotResiduals(recruit.resids, form = factor(rep(1, nrow(recruit))))) + 
  wrap_elements(~plotResiduals(recruit.resids, quantreg = FALSE)) +
  wrap_elements(~testDispersion(recruit.resids)) 
```

## Model investigation

### Partial effects plots 
```{r}
recruit.brm6 |> conditional_effects() |>
  plot(points = TRUE, ask = FALSE)
```


## Model investigation
```{r}
recruit.brm6 |>
  as_draws_df() |>
  mutate(across(everything(), exp)) |>
  summarise_draws(median,
                  HDInterval::hdi,
                  rhat, length, ess_bulk, ess_tail,
                  Pl = ~mean(.x < 1),
                  Pg = ~mean(.x > 1)) |> #checks how confident we are that there's evidence of decline
  knitr::kable()
```


# Compare models

```{r}
loo::loo_compare(loo::loo(recruit.brm2),
                 loo::loo(recruit.brm4),
                 loo::loo(recruit.brm6))
```


